[START][2023-03-17 14:26:17] LSP logging initiated
[INFO][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:661	"Starting RPC client"	{  args = {},  cmd = "clangd",  extra = {    cwd = "/home/josh/nav2_ws/src/navigation2"  }}
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 1,  jsonrpc = "2.0",  method = "initialize",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false      },      offsetEncoding = { "utf-8", "utf-16" },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }            }          },          dataSupport = true,          dynamicRegistration = false,          isPreferredSupport = true,          resolveSupport = {            properties = { "edit" }          }        },        completion = {          completionItem = {            commitCharactersSupport = true,            deprecatedSupport = true,            documentationFormat = { "markdown", "plaintext" },            insertReplaceSupport = true,            insertTextModeSupport = {              valueSet = { 1, 2 }            },            labelDetailsSupport = true,            preselectSupport = true,            resolveSupport = {              properties = { "documentation", "detail", "additionalTextEdits" }            },            snippetSupport = true,            tagSupport = {              valueSet = { 1 }            }          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          completionList = {            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }          },          contextSupport = true,          dynamicRegistration = false,          editsNearCursor = true,          insertTextMode = 1        },        declaration = {          linkSupport = true        },        definition = {          linkSupport = true        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        hover = {          contentFormat = { "markdown", "plaintext" },          dynamicRegistration = false        },        implementation = {          linkSupport = true        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = false,          prepareSupport = true        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { "markdown", "plaintext" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = false        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { "rename", "create", "delete" }        },        workspaceFolders = true      }    },    clientInfo = {      name = "Neovim",      version = "0.8.3"    },    initializationOptions = vim.empty_dict(),    processId = 14189,    rootPath = "/home/josh/nav2_ws/src/navigation2",    rootUri = "file:///home/josh/nav2_ws/src/navigation2",    trace = "off",    workspaceFolders = { {        name = "/home/josh/nav2_ws/src/navigation2",        uri = "file:///home/josh/nav2_ws/src/navigation2"      } }  }}
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.731] clangd version 15.0.6 (https://github.com/llvm/llvm-project 088f33605d8a61ff519c580a71b1dd57d16a03f8)\nI[14:26:17.731] Features: linux+grpc\nI[14:26:17.731] PID: 14217\nI[14:26:17.731] Working directory: /home/josh/nav2_ws/src/navigation2\nI[14:26:17.731] argv[0]: clangd\nI[14:26:17.731] Starting LSP over stdin/stdout\nI[14:26:17.731] <-- initialize(1)\nI[14:26:17.732] --> reply:initialize(1) 0 ms\n"
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 1,  jsonrpc = "2.0",  result = {    capabilities = {      astProvider = true,      callHierarchyProvider = true,      clangdInlayHintsProvider = true,      codeActionProvider = {        codeActionKinds = { "quickfix", "refactor", "info" }      },      compilationDatabase = {        automaticReload = true      },      completionProvider = {        resolveProvider = false,        triggerCharacters = { ".", "<", ">", ":", '"', "/", "*" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = false      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = "\n",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { "clangd.applyFix", "clangd.applyTweak" }      },      hoverProvider = true,      implementationProvider = true,      inlayHintProvider = true,      memoryUsageProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = { "declaration", "deprecated", "deduced", "readonly", "static", "abstract", "virtual", "dependentName", "defaultLibrary", "usedAsMutableReference", "functionScope", "classScope", "fileScope", "globalScope" },          tokenTypes = { "variable", "variable", "parameter", "function", "method", "function", "property", "variable", "class", "interface", "enum", "enumMember", "type", "type", "unknown", "namespace", "typeParameter", "concept", "type", "macro", "comment" }        },        range = false      },      signatureHelpProvider = {        triggerCharacters = { "(", ")", "{", "}", "<", ">", "," }      },      standardTypeHierarchyProvider = true,      textDocumentSync = {        change = 2,        openClose = true,        save = true      },      typeDefinitionProvider = true,      typeHierarchyProvider = true,      workspaceSymbolProvider = true    },    offsetEncoding = "utf-8",    serverInfo = {      name = "clangd",      version = "clangd version 15.0.6 (https://github.com/llvm/llvm-project 088f33605d8a61ff519c580a71b1dd57d16a03f8) linux+grpc x86_64-unknown-linux-gnu"    }  }}
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "initialized",  params = vim.empty_dict()}
[INFO][2023-03-17 14:26:17] .../lua/vim/lsp.lua:1336	"LSP[clangd]"	"server_capabilities"	{  server_capabilities = {    astProvider = true,    callHierarchyProvider = true,    clangdInlayHintsProvider = true,    codeActionProvider = {      codeActionKinds = { "quickfix", "refactor", "info" }    },    compilationDatabase = {      automaticReload = true    },    completionProvider = {      resolveProvider = false,      triggerCharacters = { ".", "<", ">", ":", '"', "/", "*" }    },    declarationProvider = true,    definitionProvider = true,    documentFormattingProvider = true,    documentHighlightProvider = true,    documentLinkProvider = {      resolveProvider = false    },    documentOnTypeFormattingProvider = {      firstTriggerCharacter = "\n",      moreTriggerCharacter = {}    },    documentRangeFormattingProvider = true,    documentSymbolProvider = true,    executeCommandProvider = {      commands = { "clangd.applyFix", "clangd.applyTweak" }    },    hoverProvider = true,    implementationProvider = true,    inlayHintProvider = true,    memoryUsageProvider = true,    referencesProvider = true,    renameProvider = {      prepareProvider = true    },    selectionRangeProvider = true,    semanticTokensProvider = {      full = {        delta = true      },      legend = {        tokenModifiers = { "declaration", "deprecated", "deduced", "readonly", "static", "abstract", "virtual", "dependentName", "defaultLibrary", "usedAsMutableReference", "functionScope", "classScope", "fileScope", "globalScope" },        tokenTypes = { "variable", "variable", "parameter", "function", "method", "function", "property", "variable", "class", "interface", "enum", "enumMember", "type", "type", "unknown", "namespace", "typeParameter", "concept", "type", "macro", "comment" }      },      range = false    },    signatureHelpProvider = {      triggerCharacters = { "(", ")", "{", "}", "<", ">", "," }    },    standardTypeHierarchyProvider = true,    textDocumentSync = {      change = 2,      openClose = true,      save = true    },    typeDefinitionProvider = true,    typeHierarchyProvider = true,    workspaceSymbolProvider = true  }}
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "textDocument/didOpen",  params = {    textDocument = {      languageId = "cpp",      text = '// Copyright (c) 2021 Samsung Research\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#include <vector>\n#include <string>\n#include <memory>\n#include <limits>\n#include "nav2_bt_navigator/navigators/navigate_to_pose.hpp"\n\nnamespace nav2_bt_navigator\n{\n\nbool\nNavigateToPoseNavigator::configure(\n  rclcpp_lifecycle::LifecycleNode::WeakPtr parent_node,\n  std::shared_ptr<nav2_util::OdomSmoother> odom_smoother)\n{\n  start_time_ = rclcpp::Time(0);\n  auto node = parent_node.lock();\n\n  if (!node->has_parameter("goal_blackboard_id")) {\n    node->declare_parameter("goal_blackboard_id", std::string("goal"));\n  }\n\n  goal_blackboard_id_ = node->get_parameter("goal_blackboard_id").as_string();\n\n  if (!node->has_parameter("path_blackboard_id")) {\n    node->declare_parameter("path_blackboard_id", std::string("path"));\n  }\n\n  path_blackboard_id_ = node->get_parameter("path_blackboard_id").as_string();\n\n  // Odometry smoother object for getting current speed\n  odom_smoother_ = odom_smoother;\n\n  self_client_ = rclcpp_action::create_client<ActionT>(node, getName());\n\n  goal_sub_ = node->create_subscription<geometry_msgs::msg::PoseStamped>(\n    "goal_pose",\n    rclcpp::SystemDefaultsQoS(),\n    std::bind(&NavigateToPoseNavigator::onGoalPoseReceived, this, std::placeholders::_1));\n  return true;\n}\n\nstd::string\nNavigateToPoseNavigator::getDefaultBTFilepath(\n  rclcpp_lifecycle::LifecycleNode::WeakPtr parent_node)\n{\n  std::string default_bt_xml_filename;\n  auto node = parent_node.lock();\n\n  if (!node->has_parameter("default_nav_to_pose_bt_xml")) {\n    std::string pkg_share_dir =\n      ament_index_cpp::get_package_share_directory("nav2_bt_navigator");\n    node->declare_parameter<std::string>(\n      "default_nav_to_pose_bt_xml",\n      pkg_share_dir +\n      "/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml");\n  }\n\n  node->get_parameter("default_nav_to_pose_bt_xml", default_bt_xml_filename);\n\n  return default_bt_xml_filename;\n}\n\nbool\nNavigateToPoseNavigator::cleanup()\n{\n  goal_sub_.reset();\n  self_client_.reset();\n  return true;\n}\n\nbool\nNavigateToPoseNavigator::goalReceived(ActionT::Goal::ConstSharedPtr goal)\n{\n  auto bt_xml_filename = goal->behavior_tree;\n\n  if (!bt_action_server_->loadBehaviorTree(bt_xml_filename)) {\n    RCLCPP_ERROR(\n      logger_, "BT file not found: %s. Navigation canceled.",\n      bt_xml_filename.c_str());\n    return false;\n  }\n\n  initializeGoalPose(goal);\n\n  return true;\n}\n\nvoid\nNavigateToPoseNavigator::goalCompleted(\n  typename ActionT::Result::SharedPtr /*result*/,\n  const nav2_behavior_tree::BtStatus /*final_bt_status*/)\n{\n}\n\nvoid\nNavigateToPoseNavigator::onLoop()\n{\n  // action server feedback (pose, duration of task,\n  // number of recoveries, and distance remaining to goal)\n  auto feedback_msg = std::make_shared<ActionT::Feedback>();\n\n  geometry_msgs::msg::PoseStamped current_pose;\n  nav2_util::getCurrentPose(\n    current_pose, *feedback_utils_.tf,\n    feedback_utils_.global_frame, feedback_utils_.robot_frame,\n    feedback_utils_.transform_tolerance);\n\n  auto blackboard = bt_action_server_->getBlackboard();\n\n  try {\n    // Get current path points\n    nav_msgs::msg::Path current_path;\n    blackboard->get<nav_msgs::msg::Path>(path_blackboard_id_, current_path);\n\n    // Find the closest pose to current pose on global path\n    auto find_closest_pose_idx =\n      [&current_pose, &current_path]() {\n        size_t closest_pose_idx = 0;\n        double curr_min_dist = std::numeric_limits<double>::max();\n        for (size_t curr_idx = 0; curr_idx < current_path.poses.size(); ++curr_idx) {\n          double curr_dist = nav2_util::geometry_utils::euclidean_distance(\n            current_pose, current_path.poses[curr_idx]);\n          if (curr_dist < curr_min_dist) {\n            curr_min_dist = curr_dist;\n            closest_pose_idx = curr_idx;\n          }\n        }\n        return closest_pose_idx;\n      };\n\n    // Calculate distance on the path\n    double distance_remaining =\n      nav2_util::geometry_utils::calculate_path_length(current_path, find_closest_pose_idx());\n\n    // Default value for time remaining\n    rclcpp::Duration estimated_time_remaining = rclcpp::Duration::from_seconds(0.0);\n\n    // Get current speed\n    geometry_msgs::msg::Twist current_odom = odom_smoother_->getTwist();\n    double current_linear_speed = std::hypot(current_odom.linear.x, current_odom.linear.y);\n\n    // Calculate estimated time taken to goal if speed is higher than 1cm/s\n    // and at least 10cm to go\n    if ((std::abs(current_linear_speed) > 0.01) && (distance_remaining > 0.1)) {\n      estimated_time_remaining =\n        rclcpp::Duration::from_seconds(distance_remaining / std::abs(current_linear_speed));\n    }\n\n    feedback_msg->distance_remaining = distance_remaining;\n    feedback_msg->estimated_time_remaining = estimated_time_remaining;\n  } catch (...) {\n    // Ignore\n  }\n\n  int recovery_count = 0;\n  blackboard->get<int>("number_recoveries", recovery_count);\n  feedback_msg->number_of_recoveries = recovery_count;\n  feedback_msg->current_pose = current_pose;\n  feedback_msg->navigation_time = clock_->now() - start_time_;\n\n  bt_action_server_->publishFeedback(feedback_msg);\n}\n\nvoid\nNavigateToPoseNavigator::onPreempt(ActionT::Goal::ConstSharedPtr goal)\n{\n  RCLCPP_INFO(logger_, "Received goal preemption request");\n\n  if (goal->behavior_tree == bt_action_server_->getCurrentBTFilename() ||\n    (goal->behavior_tree.empty() &&\n    bt_action_server_->getCurrentBTFilename() == bt_action_server_->getDefaultBTFilename()))\n  {\n    // if pending goal requests the same BT as the current goal, accept the pending goal\n    // if pending goal has an empty behavior_tree field, it requests the default BT file\n    // accept the pending goal if the current goal is running the default BT file\n    initializeGoalPose(bt_action_server_->acceptPendingGoal());\n  } else {\n    RCLCPP_WARN(\n      logger_,\n      "Preemption request was rejected since the requested BT XML file is not the same "\n      "as the one that the current goal is executing. Preemption with a new BT is invalid "\n      "since it would require cancellation of the previous goal instead of true preemption."\n      "\\nCancel the current goal and send a new action request if you want to use a "\n      "different BT XML file. For now, continuing to track the last goal until completion.");\n    bt_action_server_->terminatePendingGoal();\n  }\n}\n\nvoid\nNavigateToPoseNavigator::initializeGoalPose(ActionT::Goal::ConstSharedPtr goal)\n{\n  RCLCPP_INFO(\n    logger_, "Begin navigating from current location to (%.2f, %.2f)",\n    goal->pose.pose.position.x, goal->pose.pose.position.y);\n\n  // Reset state for new action feedback\n  start_time_ = clock_->now();\n  auto blackboard = bt_action_server_->getBlackboard();\n  blackboard->set<int>("number_recoveries", 0);  // NOLINT\n\n  // Update the goal pose on the blackboard\n  blackboard->set<geometry_msgs::msg::PoseStamped>(goal_blackboard_id_, goal->pose);\n}\n\nvoid\nNavigateToPoseNavigator::onGoalPoseReceived(const geometry_msgs::msg::PoseStamped::SharedPtr pose)\n{\n  ActionT::Goal goal;\n  goal.pose = *pose;\n  self_client_->async_send_goal(goal);\n}\n\n}  // namespace nav2_bt_navigator\n',      uri = "file:///home/josh/nav2_ws/src/navigation2/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp",      version = 0    }  }}
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.747] <-- initialized\nI[14:26:17.748] <-- textDocument/didOpen\n"
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.751] Loaded compilation database from /home/josh/nav2_ws/build/compile_commands.json\nI[14:26:17.752] ASTWorker building file /home/josh/nav2_ws/src/navigation2/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp version 0 with command inferred from /home/josh/nav2_ws/src/navigation2/nav2_behavior_tree/src/behavior_tree_engine.cpp\n[/home/josh/nav2_ws/build/nav2_behavior_tree]\n/usr/bin/c++ --driver-mode=g++ -DDEFAULT_RMW_IMPLEMENTATION=rmw_fastrtps_cpp -DRCUTILS_ENABLE_FAULT_INJECTION -Dnav2_behavior_tree_EXPORTS -I/home/josh/nav2_ws/src/navigation2/nav2_behavior_tree/include -I/home/josh/nav2_ws/install/nav2_util/include -isystem /home/josh/nav2_ws/install/nav2_msgs/include/nav2_msgs -isystem /opt/ros/rolling/include/rclcpp -isystem /opt/ros/rolling/include/rclcpp_action -isystem /opt/ros/rolling/include/rclcpp_lifecycle -isystem /opt/ros/rolling/include/geometry_msgs -isystem /opt/ros/rolling/include/sensor_msgs -isystem /opt/ros/rolling/include/nav_msgs -isystem /opt/ros/rolling/include -isystem /opt/ros/rolling/include/tf2 -isystem /opt/ros/rolling/include/tf2_ros -isystem /opt/ros/rolling/include/tf2_geometry_msgs -isystem /opt/ros/rolling/include/std_msgs -isystem /opt/ros/rolling/include/std_srvs -isystem /opt/ros/rolling/include/lifecycle_msgs -isystem /opt/ros/rolling/include/bond -isystem /opt/ros/rolling/include/action_msgs -isystem /opt/ros/rolling/include/ament_index_cpp -isystem /opt/ros/rolling/include/libstatistics_collector -isystem /opt/ros/rolling/include/builtin_interfaces -isystem /opt/ros/rolling/include/rosidl_runtime_c -isystem /opt/ros/rolling/include/rcutils -isystem /opt/ros/rolling/include/rosidl_typesupport_interface -isystem /opt/ros/rolling/include/fastcdr -isystem /opt/ros/rolling/include/rosidl_runtime_cpp -isystem /opt/ros/rolling/include/rosidl_typesupport_fastrtps_cpp -isystem /opt/ros/rolling/include/rmw -isystem /opt/ros/rolling/include/rosidl_typesupport_fastrtps_c -isystem /opt/ros/rolling/include/rosidl_typesupport_introspection_c -isystem /opt/ros/rolling/include/rosidl_typesupport_introspection_cpp -isystem /opt/ros/rolling/include/rcl -isystem /opt/ros/rolling/include/rcl_interfaces -isystem /opt/ros/rolling/include/rcl_logging_interface -isystem /opt/ros/rolling/include/rcl_yaml_param_parser -isystem /opt/ros/rolling/include/libyaml_vendor -isystem /opt/ros/rolling/include/tracetools -isystem /opt/ros/rolling/include/rcpputils -isystem /opt/ros/rolling/include/statistics_msgs -isystem /opt/ros/rolling/include/rosgraph_msgs -isystem /opt/ros/rolling/include/rosidl_typesupport_cpp -isystem /opt/ros/rolling/include/rosidl_typesupport_c -isystem /opt/ros/rolling/include/unique_identifier_msgs -isystem /opt/ros/rolling/include/rcl_action -isystem /opt/ros/rolling/include/rcl_lifecycle -isystem /opt/ros/rolling/include/message_filters -isystem /opt/ros/rolling/include/tf2_msgs -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wall -Wextra -Wpedantic -Werror -Wdeprecated -fPIC -c -resource-dir=/home/josh/.local/share/nvim/mason/packages/clangd/clangd/lib/clang/15.0.6 -- /home/josh/nav2_ws/src/navigation2/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp\n"
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.754] Loaded compilation database from /home/josh/nav2_ws/build/nav2_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.755] Loaded compilation database from /home/josh/nav2_ws/build/dwb_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.755] Loaded compilation database from /home/josh/nav2_ws/build/nav_2d_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.756] Loaded compilation database from /home/josh/nav2_ws/build/nav2_rviz_plugins/compile_commands.json\nI[14:26:17.756] --> window/workDoneProgress/create(0)\nI[14:26:17.756] Enqueueing 228 commands for indexing\n"
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 0,  jsonrpc = "2.0",  method = "window/workDoneProgress/create",  params = {    token = "backgroundIndexProgress"  }}
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:403	"server_request: callback result"	{  result = vim.NIL,  status = true}
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 0,  jsonrpc = "2.0",  result = vim.NIL}
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.757] <-- reply(0)\n"
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.757] --> $/progress\nI[14:26:17.757] --> $/progress\n"
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "begin",      percentage = 0,      title = "indexing"    }  }}
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "report",      message = "0/1",      percentage = 0    }  }}
[ERROR][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:17.973] --> textDocument/publishDiagnostics\n"
[DEBUG][2023-03-17 14:26:17] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "textDocument/publishDiagnostics",  params = {    diagnostics = { {        code = "pp_file_not_found",        message = "'nav2_bt_navigator/navigators/navigate_to_pose.hpp' file not found",        range = {          ["end"] = {            character = 60,            line = 18          },          start = {            character = 9,            line = 18          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 24          },          start = {            character = 0,            line = 24          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'rclcpp_lifecycle'",        range = {          ["end"] = {            character = 18,            line = 25          },          start = {            character = 2,            line = 25          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'nav2_util'",        range = {          ["end"] = {            character = 27,            line = 26          },          start = {            character = 18,            line = 26          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 56          },          start = {            character = 0,            line = 56          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'rclcpp_lifecycle'",        range = {          ["end"] = {            character = 18,            line = 57          },          start = {            character = 2,            line = 57          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 77          },          start = {            character = 0,            line = 77          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 85          },          start = {            character = 0,            line = 85          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'ActionT'",        range = {          ["end"] = {            character = 45,            line = 85          },          start = {            character = 38,            line = 85          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 102          },          start = {            character = 0,            line = 102          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'ActionT'",        range = {          ["end"] = {            character = 18,            line = 103          },          start = {            character = 11,            line = 103          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'nav2_behavior_tree'",        range = {          ["end"] = {            character = 26,            line = 104          },          start = {            character = 8,            line = 104          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 109          },          start = {            character = 0,            line = 109          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 178          },          start = {            character = 0,            line = 178          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'ActionT'",        range = {          ["end"] = {            character = 42,            line = 178          },          start = {            character = 35,            line = 178          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 203          },          start = {            character = 0,            line = 203          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'ActionT'",        range = {          ["end"] = {            character = 51,            line = 203          },          start = {            character = 44,            line = 203          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 219          },          start = {            character = 0,            line = 219          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'geometry_msgs'",        range = {          ["end"] = {            character = 63,            line = 219          },          start = {            character = 50,            line = 219          }        },        relatedInformation = {},        severity = 1,        source = "clang"      } },    uri = "file:///home/josh/nav2_ws/src/navigation2/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp",    version = 0  }}
[ERROR][2023-03-17 14:26:18] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:18.425] --> $/progress\n"
[ERROR][2023-03-17 14:26:18] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:26:18.425] --> $/progress\n"
[DEBUG][2023-03-17 14:26:18] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "report",      message = "0/1",      percentage = 0    }  }}
[DEBUG][2023-03-17 14:26:18] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "end"    }  }}
[INFO][2023-03-17 14:29:31] .../lua/vim/lsp.lua:1808	"exit_handler"	{ {    _on_attach = <function 1>,    attached_buffers = { true },    cancel_request = <function 2>,    commands = {},    config = {      _on_attach = <function 3>,      autostart = true,      capabilities = {        callHierarchy = {          dynamicRegistration = false        },        offsetEncoding = { "utf-8", "utf-16" },        textDocument = {          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }              }            },            dataSupport = true,            dynamicRegistration = false,            isPreferredSupport = true,            resolveSupport = {              properties = { "edit" }            }          },          completion = {            completionItem = {              commitCharactersSupport = true,              deprecatedSupport = true,              documentationFormat = { "markdown", "plaintext" },              insertReplaceSupport = true,              insertTextModeSupport = {                valueSet = { 1, 2 }              },              labelDetailsSupport = true,              preselectSupport = true,              resolveSupport = {                properties = { "documentation", "detail", "additionalTextEdits" }              },              snippetSupport = true,              tagSupport = {                valueSet = { 1 }              }            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }            },            completionList = {              itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }            },            contextSupport = true,            dynamicRegistration = false,            editsNearCursor = true,            insertTextMode = 1          },          declaration = {            linkSupport = true          },          definition = {            linkSupport = true          },          documentHighlight = {            dynamicRegistration = false          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          hover = {            contentFormat = { "markdown", "plaintext" },            dynamicRegistration = false          },          implementation = {            linkSupport = true          },          publishDiagnostics = {            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 }            }          },          references = {            dynamicRegistration = false          },          rename = {            dynamicRegistration = false,            prepareSupport = true          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              activeParameterSupport = true,              documentationFormat = { "markdown", "plaintext" },              parameterInformation = {                labelOffsetSupport = true              }            }          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = false,            willSaveWaitUntil = false          },          typeDefinition = {            linkSupport = true          }        },        window = {          showDocument = {            support = false          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false            }          },          workDoneProgress = true        },        workspace = {          applyEdit = true,          configuration = true,          symbol = {            dynamicRegistration = false,            hierarchicalWorkspaceSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          workspaceEdit = {            resourceOperations = { "rename", "create", "delete" }          },          workspaceFolders = true        }      },      cmd = { "clangd" },      cmd_cwd = "/home/josh/nav2_ws/src/navigation2",      filetypes = { "c", "cpp", "objc", "objcpp", "cuda", "proto" },      flags = {},      get_language_id = <function 4>,      handlers = <1>{},      init_options = vim.empty_dict(),      log_level = 2,      message_level = 2,      name = "clangd",      on_attach = <function 5>,      on_exit = <function 6>,      on_init = <function 7>,      root_dir = "/home/josh/nav2_ws/src/navigation2",      settings = {},      single_file_support = true,      workspace_folders = <2>{ {          name = "/home/josh/nav2_ws/src/navigation2",          uri = "file:///home/josh/nav2_ws/src/navigation2"        } },      <metatable> = <3>{        __tostring = <function 8>      }    },    handlers = <table 1>,    id = 1,    initialized = true,    is_stopped = <function 9>,    messages = {      messages = {},      name = "clangd",      progress = {        backgroundIndexProgress = {          done = true,          percentage = 0,          title = "indexing"        }      },      status = {}    },    name = "clangd",    notify = <function 10>,    offset_encoding = "utf-8",    request = <function 11>,    request_sync = <function 12>,    requests = {},    rpc = {      is_closing = <function 13>,      notify = <function 14>,      request = <function 15>,      terminate = <function 16>    },    server_capabilities = {      astProvider = true,      callHierarchyProvider = true,      clangdInlayHintsProvider = true,      codeActionProvider = {        codeActionKinds = { "quickfix", "refactor", "info" }      },      compilationDatabase = {        automaticReload = true      },      completionProvider = {        resolveProvider = false,        triggerCharacters = { ".", "<", ">", ":", '"', "/", "*" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = false      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = "\n",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { "clangd.applyFix", "clangd.applyTweak" }      },      hoverProvider = true,      implementationProvider = true,      inlayHintProvider = true,      memoryUsageProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = { "declaration", "deprecated", "deduced", "readonly", "static", "abstract", "virtual", "dependentName", "defaultLibrary", "usedAsMutableReference", "functionScope", "classScope", "fileScope", "globalScope" },          tokenTypes = { "variable", "variable", "parameter", "function", "method", "function", "property", "variable", "class", "interface", "enum", "enumMember", "type", "type", "unknown", "namespace", "typeParameter", "concept", "type", "macro", "comment" }        },        range = false      },      signatureHelpProvider = {        triggerCharacters = { "(", ")", "{", "}", "<", ">", "," }      },      standardTypeHierarchyProvider = true,      textDocumentSync = {        change = 2,        openClose = true,        save = true      },      typeDefinitionProvider = true,      typeHierarchyProvider = true,      workspaceSymbolProvider = true    },    stop = <function 17>,    supports_method = <function 18>,    workspaceFolders = <table 2>,    workspace_did_change_configuration = <function 19>,    workspace_folders = <table 2>,    <metatable> = {      __index = <function 20>    }  } }
[DEBUG][2023-03-17 14:29:31] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 2,  jsonrpc = "2.0",  method = "shutdown"}
[ERROR][2023-03-17 14:29:31] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:29:31.838] <-- shutdown(2)\nI[14:29:31.838] --> reply:shutdown(2) 0 ms\n"
[DEBUG][2023-03-17 14:29:31] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 2,  jsonrpc = "2.0"}
[DEBUG][2023-03-17 14:29:31] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "exit"}
[ERROR][2023-03-17 14:29:31] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:29:31.840] <-- exit\n"
[START][2023-03-17 14:31:32] LSP logging initiated
[INFO][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:661	"Starting RPC client"	{  args = {},  cmd = "clangd",  extra = {    cwd = "/home/josh/nav2_ws/src/navigation2"  }}
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 1,  jsonrpc = "2.0",  method = "initialize",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false      },      offsetEncoding = { "utf-8", "utf-16" },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }            }          },          dataSupport = true,          dynamicRegistration = false,          isPreferredSupport = true,          resolveSupport = {            properties = { "edit" }          }        },        completion = {          completionItem = {            commitCharactersSupport = true,            deprecatedSupport = true,            documentationFormat = { "markdown", "plaintext" },            insertReplaceSupport = true,            insertTextModeSupport = {              valueSet = { 1, 2 }            },            labelDetailsSupport = true,            preselectSupport = true,            resolveSupport = {              properties = { "documentation", "detail", "additionalTextEdits" }            },            snippetSupport = true,            tagSupport = {              valueSet = { 1 }            }          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          completionList = {            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }          },          contextSupport = true,          dynamicRegistration = false,          editsNearCursor = true,          insertTextMode = 1        },        declaration = {          linkSupport = true        },        definition = {          linkSupport = true        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        hover = {          contentFormat = { "markdown", "plaintext" },          dynamicRegistration = false        },        implementation = {          linkSupport = true        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = false,          prepareSupport = true        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { "markdown", "plaintext" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = false        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { "rename", "create", "delete" }        },        workspaceFolders = true      }    },    clientInfo = {      name = "Neovim",      version = "0.8.3"    },    initializationOptions = vim.empty_dict(),    processId = 14685,    rootPath = "/home/josh/nav2_ws/src/navigation2",    rootUri = "file:///home/josh/nav2_ws/src/navigation2",    trace = "off",    workspaceFolders = { {        name = "/home/josh/nav2_ws/src/navigation2",        uri = "file:///home/josh/nav2_ws/src/navigation2"      } }  }}
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.447] clangd version 15.0.6 (https://github.com/llvm/llvm-project 088f33605d8a61ff519c580a71b1dd57d16a03f8)\nI[14:31:32.447] Features: linux+grpc\nI[14:31:32.447] PID: 14716\nI[14:31:32.447] Working directory: /home/josh/nav2_ws/src/navigation2\nI[14:31:32.447] argv[0]: clangd\nI[14:31:32.447] Starting LSP over stdin/stdout\nI[14:31:32.448] <-- initialize(1)\nI[14:31:32.448] --> reply:initialize(1) 0 ms\n"
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 1,  jsonrpc = "2.0",  result = {    capabilities = {      astProvider = true,      callHierarchyProvider = true,      clangdInlayHintsProvider = true,      codeActionProvider = {        codeActionKinds = { "quickfix", "refactor", "info" }      },      compilationDatabase = {        automaticReload = true      },      completionProvider = {        resolveProvider = false,        triggerCharacters = { ".", "<", ">", ":", '"', "/", "*" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = false      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = "\n",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { "clangd.applyFix", "clangd.applyTweak" }      },      hoverProvider = true,      implementationProvider = true,      inlayHintProvider = true,      memoryUsageProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = { "declaration", "deprecated", "deduced", "readonly", "static", "abstract", "virtual", "dependentName", "defaultLibrary", "usedAsMutableReference", "functionScope", "classScope", "fileScope", "globalScope" },          tokenTypes = { "variable", "variable", "parameter", "function", "method", "function", "property", "variable", "class", "interface", "enum", "enumMember", "type", "type", "unknown", "namespace", "typeParameter", "concept", "type", "macro", "comment" }        },        range = false      },      signatureHelpProvider = {        triggerCharacters = { "(", ")", "{", "}", "<", ">", "," }      },      standardTypeHierarchyProvider = true,      textDocumentSync = {        change = 2,        openClose = true,        save = true      },      typeDefinitionProvider = true,      typeHierarchyProvider = true,      workspaceSymbolProvider = true    },    offsetEncoding = "utf-8",    serverInfo = {      name = "clangd",      version = "clangd version 15.0.6 (https://github.com/llvm/llvm-project 088f33605d8a61ff519c580a71b1dd57d16a03f8) linux+grpc x86_64-unknown-linux-gnu"    }  }}
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "initialized",  params = vim.empty_dict()}
[INFO][2023-03-17 14:31:32] .../lua/vim/lsp.lua:1336	"LSP[clangd]"	"server_capabilities"	{  server_capabilities = {    astProvider = true,    callHierarchyProvider = true,    clangdInlayHintsProvider = true,    codeActionProvider = {      codeActionKinds = { "quickfix", "refactor", "info" }    },    compilationDatabase = {      automaticReload = true    },    completionProvider = {      resolveProvider = false,      triggerCharacters = { ".", "<", ">", ":", '"', "/", "*" }    },    declarationProvider = true,    definitionProvider = true,    documentFormattingProvider = true,    documentHighlightProvider = true,    documentLinkProvider = {      resolveProvider = false    },    documentOnTypeFormattingProvider = {      firstTriggerCharacter = "\n",      moreTriggerCharacter = {}    },    documentRangeFormattingProvider = true,    documentSymbolProvider = true,    executeCommandProvider = {      commands = { "clangd.applyFix", "clangd.applyTweak" }    },    hoverProvider = true,    implementationProvider = true,    inlayHintProvider = true,    memoryUsageProvider = true,    referencesProvider = true,    renameProvider = {      prepareProvider = true    },    selectionRangeProvider = true,    semanticTokensProvider = {      full = {        delta = true      },      legend = {        tokenModifiers = { "declaration", "deprecated", "deduced", "readonly", "static", "abstract", "virtual", "dependentName", "defaultLibrary", "usedAsMutableReference", "functionScope", "classScope", "fileScope", "globalScope" },        tokenTypes = { "variable", "variable", "parameter", "function", "method", "function", "property", "variable", "class", "interface", "enum", "enumMember", "type", "type", "unknown", "namespace", "typeParameter", "concept", "type", "macro", "comment" }      },      range = false    },    signatureHelpProvider = {      triggerCharacters = { "(", ")", "{", "}", "<", ">", "," }    },    standardTypeHierarchyProvider = true,    textDocumentSync = {      change = 2,      openClose = true,      save = true    },    typeDefinitionProvider = true,    typeHierarchyProvider = true,    workspaceSymbolProvider = true  }}
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "textDocument/didOpen",  params = {    textDocument = {      languageId = "cpp",      text = "// Copyright (c) 2019 Intel Corporation\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#include \"nav2_util/node_utils.hpp\"\n#include <chrono>\n#include <string>\n#include <algorithm>\n#include <cctype>\n\nusing std::chrono::high_resolution_clock;\nusing std::to_string;\nusing std::string;\nusing std::replace_if;\nusing std::isalnum;\n\nnamespace nav2_util\n{\n\nstring sanitize_node_name(const string & potential_node_name)\n{\n  string node_name(potential_node_name);\n  // read this as `replace` characters in `node_name` `if` not alphanumeric.\n  // replace with '_'\n  replace_if(\n    begin(node_name), end(node_name),\n    [](auto c) {return !isalnum(c);},\n    '_');\n  return node_name;\n}\n\nstring add_namespaces(const string & top_ns, const string & sub_ns)\n{\n  if (!top_ns.empty() && top_ns.back() == '/') {\n    if (top_ns.front() == '/') {\n      return top_ns + sub_ns;\n    } else {\n      return \"/\" + top_ns + sub_ns;\n    }\n  }\n\n  return top_ns + \"/\" + sub_ns;\n}\n\nstd::string time_to_string(size_t len)\n{\n  string output(len, '0');  // prefill the string with zeros\n  auto timepoint = high_resolution_clock::now();\n  auto timecount = timepoint.time_since_epoch().count();\n  auto timestring = to_string(timecount);\n  if (timestring.length() >= len) {\n    // if `timestring` is shorter, put it at the end of `output`\n    output.replace(\n      0, len,\n      timestring,\n      timestring.length() - len, len);\n  } else {\n    // if `output` is shorter, just copy in the end of `timestring`\n    output.replace(\n      len - timestring.length(), timestring.length(),\n      timestring,\n      0, timestring.length());\n  }\n  return output;\n}\n\nstd::string generate_internal_node_name(const std::string & prefix)\n{\n  return sanitize_node_name(prefix) + \"_\" + time_to_string(8);\n}\n\nrclcpp::Node::SharedPtr generate_internal_node(const std::string & prefix)\n{\n  auto options =\n    rclcpp::NodeOptions()\n    .start_parameter_services(false)\n    .start_parameter_event_publisher(false)\n    .arguments({\"--ros-args\", \"-r\", \"__node:=\" + generate_internal_node_name(prefix), \"--\"});\n  return rclcpp::Node::make_shared(\"_\", options);\n}\n\n}  // namespace nav2_util\n",      uri = "file:///home/josh/nav2_ws/src/navigation2/nav2_util/src/node_utils.cpp",      version = 0    }  }}
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.461] <-- initialized\nI[14:31:32.462] <-- textDocument/didOpen\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.465] Loaded compilation database from /home/josh/nav2_ws/build/compile_commands.json\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.465] ASTWorker building file /home/josh/nav2_ws/src/navigation2/nav2_util/src/node_utils.cpp version 0 with command \n[/home/josh/nav2_ws/build/nav2_util/src]\n/usr/bin/c++ --driver-mode=g++ -DDEFAULT_RMW_IMPLEMENTATION=rmw_fastrtps_cpp -DRCUTILS_ENABLE_FAULT_INJECTION -Dnav2_util_core_EXPORTS -I/home/josh/nav2_ws/src/navigation2/nav2_util/include -I/opt/ros/rolling/include -isystem /home/josh/nav2_ws/install/nav2_msgs/include/nav2_msgs -isystem /opt/ros/rolling/include/rclcpp -isystem /opt/ros/rolling/include/tf2 -isystem /opt/ros/rolling/include/tf2_ros -isystem /opt/ros/rolling/include/nav_msgs -isystem /opt/ros/rolling/include/geometry_msgs -isystem /opt/ros/rolling/include/lifecycle_msgs -isystem /opt/ros/rolling/include/rclcpp_lifecycle -isystem /opt/ros/rolling/include/tf2_geometry_msgs -isystem /opt/ros/rolling/include/bond -isystem /opt/ros/rolling/include/ament_index_cpp -isystem /opt/ros/rolling/include/libstatistics_collector -isystem /opt/ros/rolling/include/builtin_interfaces -isystem /opt/ros/rolling/include/rosidl_runtime_c -isystem /opt/ros/rolling/include/rcutils -isystem /opt/ros/rolling/include/rosidl_typesupport_interface -isystem /opt/ros/rolling/include/fastcdr -isystem /opt/ros/rolling/include/rosidl_runtime_cpp -isystem /opt/ros/rolling/include/rosidl_typesupport_fastrtps_cpp -isystem /opt/ros/rolling/include/rmw -isystem /opt/ros/rolling/include/rosidl_typesupport_fastrtps_c -isystem /opt/ros/rolling/include/rosidl_typesupport_introspection_c -isystem /opt/ros/rolling/include/rosidl_typesupport_introspection_cpp -isystem /opt/ros/rolling/include/rcl -isystem /opt/ros/rolling/include/rcl_interfaces -isystem /opt/ros/rolling/include/rcl_logging_interface -isystem /opt/ros/rolling/include/rcl_yaml_param_parser -isystem /opt/ros/rolling/include/libyaml_vendor -isystem /opt/ros/rolling/include/tracetools -isystem /opt/ros/rolling/include/rcpputils -isystem /opt/ros/rolling/include/statistics_msgs -isystem /opt/ros/rolling/include/rosgraph_msgs -isystem /opt/ros/rolling/include/rosidl_typesupport_cpp -isystem /opt/ros/rolling/include/rosidl_typesupport_c -isystem /opt/ros/rolling/include/std_msgs -isystem /opt/ros/rolling/include/action_msgs -isystem /opt/ros/rolling/include/unique_identifier_msgs -isystem /opt/ros/rolling/include/message_filters -isystem /opt/ros/rolling/include/rclcpp_action -isystem /opt/ros/rolling/include/rcl_action -isystem /opt/ros/rolling/include/tf2_msgs -isystem /opt/ros/rolling/include/rcl_lifecycle -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wall -Wextra -Wpedantic -Werror -Wdeprecated -fPIC -o CMakeFiles/nav2_util_core.dir/node_utils.cpp.o -c -resource-dir=/home/josh/.local/share/nvim/mason/packages/clangd/clangd/lib/clang/15.0.6 -- /home/josh/nav2_ws/src/navigation2/nav2_util/src/node_utils.cpp\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.468] Loaded compilation database from /home/josh/nav2_ws/build/nav2_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.468] Loaded compilation database from /home/josh/nav2_ws/build/dwb_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.468] Loaded compilation database from /home/josh/nav2_ws/build/nav_2d_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.469] Loaded compilation database from /home/josh/nav2_ws/build/nav2_rviz_plugins/compile_commands.json\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.469] --> window/workDoneProgress/create(0)\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.469] Enqueueing 228 commands for indexing\n"
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 0,  jsonrpc = "2.0",  method = "window/workDoneProgress/create",  params = {    token = "backgroundIndexProgress"  }}
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:403	"server_request: callback result"	{  result = vim.NIL,  status = true}
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 0,  jsonrpc = "2.0",  result = vim.NIL}
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.469] <-- reply(0)\n"
[ERROR][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:32.469] --> $/progress\nI[14:31:32.469] --> $/progress\n"
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "begin",      percentage = 0,      title = "indexing"    }  }}
[DEBUG][2023-03-17 14:31:32] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "report",      message = "0/1",      percentage = 0    }  }}
[ERROR][2023-03-17 14:31:33] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:33.245] --> $/progress\n"
[ERROR][2023-03-17 14:31:33] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:33.245] --> $/progress\n"
[DEBUG][2023-03-17 14:31:33] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "report",      message = "0/1",      percentage = 0    }  }}
[DEBUG][2023-03-17 14:31:33] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "end"    }  }}
[ERROR][2023-03-17 14:31:33] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:33.436] --> textDocument/publishDiagnostics\n"
[DEBUG][2023-03-17 14:31:33] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "textDocument/publishDiagnostics",  params = {    diagnostics = { {        code = "no_member_template",        message = "In included file: no template named 'variant' in namespace 'std'",        range = {          ["end"] = {            character = 35,            line = 14          },          start = {            character = 9,            line = 14          }        },        relatedInformation = { {            location = {              range = {                ["end"] = {                  character = 42,                  line = 788                },                start = {                  character = 35,                  line = 788                }              },              uri = "file:///opt/ros/rolling/include/rclcpp/rclcpp/client.hpp"            },            message = "Error occurred here"          } },        severity = 1,        source = "clang"      }, {        code = "fatal_too_many_errors",        message = "Too many errors emitted, stopping now",        range = {          ["end"] = {            character = 0,            line = 0          },          start = {            character = 0,            line = 0          }        },        relatedInformation = {},        severity = 1,        source = "clang"      } },    uri = "file:///home/josh/nav2_ws/src/navigation2/nav2_util/src/node_utils.cpp",    version = 0  }}
[INFO][2023-03-17 14:31:42] .../lua/vim/lsp.lua:1808	"exit_handler"	{ {    _on_attach = <function 1>,    attached_buffers = { true },    cancel_request = <function 2>,    commands = {},    config = {      _on_attach = <function 3>,      autostart = true,      capabilities = {        callHierarchy = {          dynamicRegistration = false        },        offsetEncoding = { "utf-8", "utf-16" },        textDocument = {          codeAction = {            codeActionLiteralSupport = {              codeActionKind = {                valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }              }            },            dataSupport = true,            dynamicRegistration = false,            isPreferredSupport = true,            resolveSupport = {              properties = { "edit" }            }          },          completion = {            completionItem = {              commitCharactersSupport = true,              deprecatedSupport = true,              documentationFormat = { "markdown", "plaintext" },              insertReplaceSupport = true,              insertTextModeSupport = {                valueSet = { 1, 2 }              },              labelDetailsSupport = true,              preselectSupport = true,              resolveSupport = {                properties = { "documentation", "detail", "additionalTextEdits" }              },              snippetSupport = true,              tagSupport = {                valueSet = { 1 }              }            },            completionItemKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }            },            completionList = {              itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }            },            contextSupport = true,            dynamicRegistration = false,            editsNearCursor = true,            insertTextMode = 1          },          declaration = {            linkSupport = true          },          definition = {            linkSupport = true          },          documentHighlight = {            dynamicRegistration = false          },          documentSymbol = {            dynamicRegistration = false,            hierarchicalDocumentSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          hover = {            contentFormat = { "markdown", "plaintext" },            dynamicRegistration = false          },          implementation = {            linkSupport = true          },          publishDiagnostics = {            relatedInformation = true,            tagSupport = {              valueSet = { 1, 2 }            }          },          references = {            dynamicRegistration = false          },          rename = {            dynamicRegistration = false,            prepareSupport = true          },          signatureHelp = {            dynamicRegistration = false,            signatureInformation = {              activeParameterSupport = true,              documentationFormat = { "markdown", "plaintext" },              parameterInformation = {                labelOffsetSupport = true              }            }          },          synchronization = {            didSave = true,            dynamicRegistration = false,            willSave = false,            willSaveWaitUntil = false          },          typeDefinition = {            linkSupport = true          }        },        window = {          showDocument = {            support = false          },          showMessage = {            messageActionItem = {              additionalPropertiesSupport = false            }          },          workDoneProgress = true        },        workspace = {          applyEdit = true,          configuration = true,          symbol = {            dynamicRegistration = false,            hierarchicalWorkspaceSymbolSupport = true,            symbolKind = {              valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }            }          },          workspaceEdit = {            resourceOperations = { "rename", "create", "delete" }          },          workspaceFolders = true        }      },      cmd = { "clangd" },      cmd_cwd = "/home/josh/nav2_ws/src/navigation2",      filetypes = { "c", "cpp", "objc", "objcpp", "cuda", "proto" },      flags = {},      get_language_id = <function 4>,      handlers = <1>{},      init_options = vim.empty_dict(),      log_level = 2,      message_level = 2,      name = "clangd",      on_attach = <function 5>,      on_exit = <function 6>,      on_init = <function 7>,      root_dir = "/home/josh/nav2_ws/src/navigation2",      settings = {},      single_file_support = true,      workspace_folders = <2>{ {          name = "/home/josh/nav2_ws/src/navigation2",          uri = "file:///home/josh/nav2_ws/src/navigation2"        } },      <metatable> = <3>{        __tostring = <function 8>      }    },    handlers = <table 1>,    id = 1,    initialized = true,    is_stopped = <function 9>,    messages = {      messages = {},      name = "clangd",      progress = {        backgroundIndexProgress = {          done = true,          percentage = 0,          title = "indexing"        }      },      status = {}    },    name = "clangd",    notify = <function 10>,    offset_encoding = "utf-8",    request = <function 11>,    request_sync = <function 12>,    requests = {},    rpc = {      is_closing = <function 13>,      notify = <function 14>,      request = <function 15>,      terminate = <function 16>    },    server_capabilities = {      astProvider = true,      callHierarchyProvider = true,      clangdInlayHintsProvider = true,      codeActionProvider = {        codeActionKinds = { "quickfix", "refactor", "info" }      },      compilationDatabase = {        automaticReload = true      },      completionProvider = {        resolveProvider = false,        triggerCharacters = { ".", "<", ">", ":", '"', "/", "*" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = false      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = "\n",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { "clangd.applyFix", "clangd.applyTweak" }      },      hoverProvider = true,      implementationProvider = true,      inlayHintProvider = true,      memoryUsageProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = { "declaration", "deprecated", "deduced", "readonly", "static", "abstract", "virtual", "dependentName", "defaultLibrary", "usedAsMutableReference", "functionScope", "classScope", "fileScope", "globalScope" },          tokenTypes = { "variable", "variable", "parameter", "function", "method", "function", "property", "variable", "class", "interface", "enum", "enumMember", "type", "type", "unknown", "namespace", "typeParameter", "concept", "type", "macro", "comment" }        },        range = false      },      signatureHelpProvider = {        triggerCharacters = { "(", ")", "{", "}", "<", ">", "," }      },      standardTypeHierarchyProvider = true,      textDocumentSync = {        change = 2,        openClose = true,        save = true      },      typeDefinitionProvider = true,      typeHierarchyProvider = true,      workspaceSymbolProvider = true    },    stop = <function 17>,    supports_method = <function 18>,    workspaceFolders = <table 2>,    workspace_did_change_configuration = <function 19>,    workspace_folders = <table 2>,    <metatable> = {      __index = <function 20>    }  } }
[DEBUG][2023-03-17 14:31:42] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 2,  jsonrpc = "2.0",  method = "shutdown"}
[ERROR][2023-03-17 14:31:42] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:42.667] <-- shutdown(2)\nI[14:31:42.667] --> reply:shutdown(2) 0 ms\n"
[DEBUG][2023-03-17 14:31:42] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 2,  jsonrpc = "2.0"}
[DEBUG][2023-03-17 14:31:42] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "exit"}
[ERROR][2023-03-17 14:31:42] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:31:42.669] <-- exit\nI[14:31:42.669] LSP finished, exiting with status 0\n"
[START][2023-03-17 14:46:02] LSP logging initiated
[INFO][2023-03-17 14:46:02] .../lua/vim/lsp.lua:1808	"exit_handler"	{}
[START][2023-03-17 14:51:27] LSP logging initiated
[INFO][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:661	"Starting RPC client"	{  args = {},  cmd = "clangd",  extra = {    cwd = "/home/josh/nav2_ws"  }}
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 1,  jsonrpc = "2.0",  method = "initialize",  params = {    capabilities = {      callHierarchy = {        dynamicRegistration = false      },      offsetEncoding = { "utf-8", "utf-16" },      textDocument = {        codeAction = {          codeActionLiteralSupport = {            codeActionKind = {              valueSet = { "", "Empty", "QuickFix", "Refactor", "RefactorExtract", "RefactorInline", "RefactorRewrite", "Source", "SourceOrganizeImports", "quickfix", "refactor", "refactor.extract", "refactor.inline", "refactor.rewrite", "source", "source.organizeImports" }            }          },          dataSupport = true,          dynamicRegistration = false,          isPreferredSupport = true,          resolveSupport = {            properties = { "edit" }          }        },        completion = {          completionItem = {            commitCharactersSupport = true,            deprecatedSupport = true,            documentationFormat = { "markdown", "plaintext" },            insertReplaceSupport = true,            insertTextModeSupport = {              valueSet = { 1, 2 }            },            labelDetailsSupport = true,            preselectSupport = true,            resolveSupport = {              properties = { "documentation", "detail", "additionalTextEdits" }            },            snippetSupport = true,            tagSupport = {              valueSet = { 1 }            }          },          completionItemKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }          },          completionList = {            itemDefaults = { "commitCharacters", "editRange", "insertTextFormat", "insertTextMode", "data" }          },          contextSupport = true,          dynamicRegistration = false,          editsNearCursor = true,          insertTextMode = 1        },        declaration = {          linkSupport = true        },        definition = {          linkSupport = true        },        documentHighlight = {          dynamicRegistration = false        },        documentSymbol = {          dynamicRegistration = false,          hierarchicalDocumentSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        hover = {          contentFormat = { "markdown", "plaintext" },          dynamicRegistration = false        },        implementation = {          linkSupport = true        },        publishDiagnostics = {          relatedInformation = true,          tagSupport = {            valueSet = { 1, 2 }          }        },        references = {          dynamicRegistration = false        },        rename = {          dynamicRegistration = false,          prepareSupport = true        },        signatureHelp = {          dynamicRegistration = false,          signatureInformation = {            activeParameterSupport = true,            documentationFormat = { "markdown", "plaintext" },            parameterInformation = {              labelOffsetSupport = true            }          }        },        synchronization = {          didSave = true,          dynamicRegistration = false,          willSave = false,          willSaveWaitUntil = false        },        typeDefinition = {          linkSupport = true        }      },      window = {        showDocument = {          support = false        },        showMessage = {          messageActionItem = {            additionalPropertiesSupport = false          }        },        workDoneProgress = true      },      workspace = {        applyEdit = true,        configuration = true,        symbol = {          dynamicRegistration = false,          hierarchicalWorkspaceSymbolSupport = true,          symbolKind = {            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }          }        },        workspaceEdit = {          resourceOperations = { "rename", "create", "delete" }        },        workspaceFolders = true      }    },    clientInfo = {      name = "Neovim",      version = "0.8.3"    },    initializationOptions = vim.empty_dict(),    processId = 16699,    rootPath = "/home/josh/nav2_ws",    rootUri = "file:///home/josh/nav2_ws",    trace = "off",    workspaceFolders = { {        name = "/home/josh/nav2_ws",        uri = "file:///home/josh/nav2_ws"      } }  }}
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.951] clangd version 15.0.6 (https://github.com/llvm/llvm-project 088f33605d8a61ff519c580a71b1dd57d16a03f8)\nI[14:51:27.951] Features: linux+grpc\nI[14:51:27.951] PID: 16837\nI[14:51:27.951] Working directory: /home/josh/nav2_ws\nI[14:51:27.951] argv[0]: clangd\nI[14:51:27.951] Starting LSP over stdin/stdout\nI[14:51:27.951] <-- initialize(1)\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.951] --> reply:initialize(1) 0 ms\n"
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 1,  jsonrpc = "2.0",  result = {    capabilities = {      astProvider = true,      callHierarchyProvider = true,      clangdInlayHintsProvider = true,      codeActionProvider = {        codeActionKinds = { "quickfix", "refactor", "info" }      },      compilationDatabase = {        automaticReload = true      },      completionProvider = {        resolveProvider = false,        triggerCharacters = { ".", "<", ">", ":", '"', "/", "*" }      },      declarationProvider = true,      definitionProvider = true,      documentFormattingProvider = true,      documentHighlightProvider = true,      documentLinkProvider = {        resolveProvider = false      },      documentOnTypeFormattingProvider = {        firstTriggerCharacter = "\n",        moreTriggerCharacter = {}      },      documentRangeFormattingProvider = true,      documentSymbolProvider = true,      executeCommandProvider = {        commands = { "clangd.applyFix", "clangd.applyTweak" }      },      hoverProvider = true,      implementationProvider = true,      inlayHintProvider = true,      memoryUsageProvider = true,      referencesProvider = true,      renameProvider = {        prepareProvider = true      },      selectionRangeProvider = true,      semanticTokensProvider = {        full = {          delta = true        },        legend = {          tokenModifiers = { "declaration", "deprecated", "deduced", "readonly", "static", "abstract", "virtual", "dependentName", "defaultLibrary", "usedAsMutableReference", "functionScope", "classScope", "fileScope", "globalScope" },          tokenTypes = { "variable", "variable", "parameter", "function", "method", "function", "property", "variable", "class", "interface", "enum", "enumMember", "type", "type", "unknown", "namespace", "typeParameter", "concept", "type", "macro", "comment" }        },        range = false      },      signatureHelpProvider = {        triggerCharacters = { "(", ")", "{", "}", "<", ">", "," }      },      standardTypeHierarchyProvider = true,      textDocumentSync = {        change = 2,        openClose = true,        save = true      },      typeDefinitionProvider = true,      typeHierarchyProvider = true,      workspaceSymbolProvider = true    },    offsetEncoding = "utf-8",    serverInfo = {      name = "clangd",      version = "clangd version 15.0.6 (https://github.com/llvm/llvm-project 088f33605d8a61ff519c580a71b1dd57d16a03f8) linux+grpc x86_64-unknown-linux-gnu"    }  }}
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "initialized",  params = vim.empty_dict()}
[INFO][2023-03-17 14:51:27] .../lua/vim/lsp.lua:1336	"LSP[clangd]"	"server_capabilities"	{  server_capabilities = {    astProvider = true,    callHierarchyProvider = true,    clangdInlayHintsProvider = true,    codeActionProvider = {      codeActionKinds = { "quickfix", "refactor", "info" }    },    compilationDatabase = {      automaticReload = true    },    completionProvider = {      resolveProvider = false,      triggerCharacters = { ".", "<", ">", ":", '"', "/", "*" }    },    declarationProvider = true,    definitionProvider = true,    documentFormattingProvider = true,    documentHighlightProvider = true,    documentLinkProvider = {      resolveProvider = false    },    documentOnTypeFormattingProvider = {      firstTriggerCharacter = "\n",      moreTriggerCharacter = {}    },    documentRangeFormattingProvider = true,    documentSymbolProvider = true,    executeCommandProvider = {      commands = { "clangd.applyFix", "clangd.applyTweak" }    },    hoverProvider = true,    implementationProvider = true,    inlayHintProvider = true,    memoryUsageProvider = true,    referencesProvider = true,    renameProvider = {      prepareProvider = true    },    selectionRangeProvider = true,    semanticTokensProvider = {      full = {        delta = true      },      legend = {        tokenModifiers = { "declaration", "deprecated", "deduced", "readonly", "static", "abstract", "virtual", "dependentName", "defaultLibrary", "usedAsMutableReference", "functionScope", "classScope", "fileScope", "globalScope" },        tokenTypes = { "variable", "variable", "parameter", "function", "method", "function", "property", "variable", "class", "interface", "enum", "enumMember", "type", "type", "unknown", "namespace", "typeParameter", "concept", "type", "macro", "comment" }      },      range = false    },    signatureHelpProvider = {      triggerCharacters = { "(", ")", "{", "}", "<", ">", "," }    },    standardTypeHierarchyProvider = true,    textDocumentSync = {      change = 2,      openClose = true,      save = true    },    typeDefinitionProvider = true,    typeHierarchyProvider = true,    workspaceSymbolProvider = true  }}
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:285	"rpc.send"	{  jsonrpc = "2.0",  method = "textDocument/didOpen",  params = {    textDocument = {      languageId = "cpp",      text = '// Copyright (c) 2021 Samsung Research\n//\n// Licensed under the Apache License, Version 2.0 (the "License");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an "AS IS" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n#include <vector>\n#include <string>\n#include <memory>\n#include <limits>\n#include "nav2_bt_navigator/navigators/navigate_to_pose.hpp"\n\nnamespace nav2_bt_navigator\n{\n\nbool\nNavigateToPoseNavigator::configure(\n  rclcpp_lifecycle::LifecycleNode::WeakPtr parent_node,\n  std::shared_ptr<nav2_util::OdomSmoother> odom_smoother)\n{\n  start_time_ = rclcpp::Time(0);\n  auto node = parent_node.lock();\n\n  if (!node->has_parameter("goal_blackboard_id")) {\n    node->declare_parameter("goal_blackboard_id", std::string("goal"));\n  }\n\n  goal_blackboard_id_ = node->get_parameter("goal_blackboard_id").as_string();\n\n  if (!node->has_parameter("path_blackboard_id")) {\n    node->declare_parameter("path_blackboard_id", std::string("path"));\n  }\n\n  path_blackboard_id_ = node->get_parameter("path_blackboard_id").as_string();\n\n  // Odometry smoother object for getting current speed\n  odom_smoother_ = odom_smoother;\n\n  self_client_ = rclcpp_action::create_client<ActionT>(node, getName());\n\n  goal_sub_ = node->create_subscription<geometry_msgs::msg::PoseStamped>(\n    "goal_pose",\n    rclcpp::SystemDefaultsQoS(),\n    std::bind(&NavigateToPoseNavigator::onGoalPoseReceived, this, std::placeholders::_1));\n  return true;\n}\n\nstd::string\nNavigateToPoseNavigator::getDefaultBTFilepath(\n  rclcpp_lifecycle::LifecycleNode::WeakPtr parent_node)\n{\n  std::string default_bt_xml_filename;\n  auto node = parent_node.lock();\n\n  if (!node->has_parameter("default_nav_to_pose_bt_xml")) {\n    std::string pkg_share_dir =\n      ament_index_cpp::get_package_share_directory("nav2_bt_navigator");\n    node->declare_parameter<std::string>(\n      "default_nav_to_pose_bt_xml",\n      pkg_share_dir +\n      "/behavior_trees/navigate_to_pose_w_replanning_and_recovery.xml");\n  }\n\n  node->get_parameter("default_nav_to_pose_bt_xml", default_bt_xml_filename);\n\n  return default_bt_xml_filename;\n}\n\nbool\nNavigateToPoseNavigator::cleanup()\n{\n  goal_sub_.reset();\n  self_client_.reset();\n  return true;\n}\n\nbool\nNavigateToPoseNavigator::goalReceived(ActionT::Goal::ConstSharedPtr goal)\n{\n  auto bt_xml_filename = goal->behavior_tree;\n\n  if (!bt_action_server_->loadBehaviorTree(bt_xml_filename)) {\n    RCLCPP_ERROR(\n      logger_, "BT file not found: %s. Navigation canceled.",\n      bt_xml_filename.c_str());\n    return false;\n  }\n\n  initializeGoalPose(goal);\n\n  return true;\n}\n\nvoid\nNavigateToPoseNavigator::goalCompleted(\n  typename ActionT::Result::SharedPtr /*result*/,\n  const nav2_behavior_tree::BtStatus /*final_bt_status*/)\n{\n}\n\nvoid\nNavigateToPoseNavigator::onLoop()\n{\n  // action server feedback (pose, duration of task,\n  // number of recoveries, and distance remaining to goal)\n  auto feedback_msg = std::make_shared<ActionT::Feedback>();\n\n  geometry_msgs::msg::PoseStamped current_pose;\n  nav2_util::getCurrentPose(\n    current_pose, *feedback_utils_.tf,\n    feedback_utils_.global_frame, feedback_utils_.robot_frame,\n    feedback_utils_.transform_tolerance);\n\n  auto blackboard = bt_action_server_->getBlackboard();\n\n  try {\n    // Get current path points\n    nav_msgs::msg::Path current_path;\n    blackboard->get<nav_msgs::msg::Path>(path_blackboard_id_, current_path);\n\n    // Find the closest pose to current pose on global path\n    auto find_closest_pose_idx =\n      [&current_pose, &current_path]() {\n        size_t closest_pose_idx = 0;\n        double curr_min_dist = std::numeric_limits<double>::max();\n        for (size_t curr_idx = 0; curr_idx < current_path.poses.size(); ++curr_idx) {\n          double curr_dist = nav2_util::geometry_utils::euclidean_distance(\n            current_pose, current_path.poses[curr_idx]);\n          if (curr_dist < curr_min_dist) {\n            curr_min_dist = curr_dist;\n            closest_pose_idx = curr_idx;\n          }\n        }\n        return closest_pose_idx;\n      };\n\n    // Calculate distance on the path\n    double distance_remaining =\n      nav2_util::geometry_utils::calculate_path_length(current_path, find_closest_pose_idx());\n\n    // Default value for time remaining\n    rclcpp::Duration estimated_time_remaining = rclcpp::Duration::from_seconds(0.0);\n\n    // Get current speed\n    geometry_msgs::msg::Twist current_odom = odom_smoother_->getTwist();\n    double current_linear_speed = std::hypot(current_odom.linear.x, current_odom.linear.y);\n\n    // Calculate estimated time taken to goal if speed is higher than 1cm/s\n    // and at least 10cm to go\n    if ((std::abs(current_linear_speed) > 0.01) && (distance_remaining > 0.1)) {\n      estimated_time_remaining =\n        rclcpp::Duration::from_seconds(distance_remaining / std::abs(current_linear_speed));\n    }\n\n    feedback_msg->distance_remaining = distance_remaining;\n    feedback_msg->estimated_time_remaining = estimated_time_remaining;\n  } catch (...) {\n    // Ignore\n  }\n\n  int recovery_count = 0;\n  blackboard->get<int>("number_recoveries", recovery_count);\n  feedback_msg->number_of_recoveries = recovery_count;\n  feedback_msg->current_pose = current_pose;\n  feedback_msg->navigation_time = clock_->now() - start_time_;\n\n  bt_action_server_->publishFeedback(feedback_msg);\n}\n\nvoid\nNavigateToPoseNavigator::onPreempt(ActionT::Goal::ConstSharedPtr goal)\n{\n  RCLCPP_INFO(logger_, "Received goal preemption request");\n\n  if (goal->behavior_tree == bt_action_server_->getCurrentBTFilename() ||\n    (goal->behavior_tree.empty() &&\n    bt_action_server_->getCurrentBTFilename() == bt_action_server_->getDefaultBTFilename()))\n  {\n    // if pending goal requests the same BT as the current goal, accept the pending goal\n    // if pending goal has an empty behavior_tree field, it requests the default BT file\n    // accept the pending goal if the current goal is running the default BT file\n    initializeGoalPose(bt_action_server_->acceptPendingGoal());\n  } else {\n    RCLCPP_WARN(\n      logger_,\n      "Preemption request was rejected since the requested BT XML file is not the same "\n      "as the one that the current goal is executing. Preemption with a new BT is invalid "\n      "since it would require cancellation of the previous goal instead of true preemption."\n      "\\nCancel the current goal and send a new action request if you want to use a "\n      "different BT XML file. For now, continuing to track the last goal until completion.");\n    bt_action_server_->terminatePendingGoal();\n  }\n}\n\nvoid\nNavigateToPoseNavigator::initializeGoalPose(ActionT::Goal::ConstSharedPtr goal)\n{\n  RCLCPP_INFO(\n    logger_, "Begin navigating from current location to (%.2f, %.2f)",\n    goal->pose.pose.position.x, goal->pose.pose.position.y);\n\n  // Reset state for new action feedback\n  start_time_ = clock_->now();\n  auto blackboard = bt_action_server_->getBlackboard();\n  blackboard->set<int>("number_recoveries", 0);  // NOLINT\n\n  // Update the goal pose on the blackboard\n  blackboard->set<geometry_msgs::msg::PoseStamped>(goal_blackboard_id_, goal->pose);\n}\n\nvoid\nNavigateToPoseNavigator::onGoalPoseReceived(const geometry_msgs::msg::PoseStamped::SharedPtr pose)\n{\n  ActionT::Goal goal;\n  goal.pose = *pose;\n  self_client_->async_send_goal(goal);\n}\n\n}  // namespace nav2_bt_navigator\n',      uri = "file:///home/josh/nav2_ws/src/navigation2/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp",      version = 0    }  }}
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.965] <-- initialized\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.965] <-- textDocument/didOpen\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.969] Loaded compilation database from /home/josh/nav2_ws/compile_commands.json\nI[14:51:27.969] ASTWorker building file /home/josh/nav2_ws/src/navigation2/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp version 0 with command inferred from /home/josh/nav2_ws/src/navigation2/nav2_behavior_tree/src/behavior_tree_engine.cpp\n[/home/josh/nav2_ws/build/nav2_behavior_tree]\n/usr/bin/c++ --driver-mode=g++ -DDEFAULT_RMW_IMPLEMENTATION=rmw_fastrtps_cpp -DRCUTILS_ENABLE_FAULT_INJECTION -Dnav2_behavior_tree_EXPORTS -I/home/josh/nav2_ws/src/navigation2/nav2_behavior_tree/include -I/home/josh/nav2_ws/install/nav2_util/include -isystem /home/josh/nav2_ws/install/nav2_msgs/include/nav2_msgs -isystem /opt/ros/rolling/include/rclcpp -isystem /opt/ros/rolling/include/rclcpp_action -isystem /opt/ros/rolling/include/rclcpp_lifecycle -isystem /opt/ros/rolling/include/geometry_msgs -isystem /opt/ros/rolling/include/sensor_msgs -isystem /opt/ros/rolling/include/nav_msgs -isystem /opt/ros/rolling/include -isystem /opt/ros/rolling/include/tf2 -isystem /opt/ros/rolling/include/tf2_ros -isystem /opt/ros/rolling/include/tf2_geometry_msgs -isystem /opt/ros/rolling/include/std_msgs -isystem /opt/ros/rolling/include/std_srvs -isystem /opt/ros/rolling/include/lifecycle_msgs -isystem /opt/ros/rolling/include/bond -isystem /opt/ros/rolling/include/action_msgs -isystem /opt/ros/rolling/include/ament_index_cpp -isystem /opt/ros/rolling/include/libstatistics_collector -isystem /opt/ros/rolling/include/builtin_interfaces -isystem /opt/ros/rolling/include/rosidl_runtime_c -isystem /opt/ros/rolling/include/rcutils -isystem /opt/ros/rolling/include/rosidl_typesupport_interface -isystem /opt/ros/rolling/include/fastcdr -isystem /opt/ros/rolling/include/rosidl_runtime_cpp -isystem /opt/ros/rolling/include/rosidl_typesupport_fastrtps_cpp -isystem /opt/ros/rolling/include/rmw -isystem /opt/ros/rolling/include/rosidl_typesupport_fastrtps_c -isystem /opt/ros/rolling/include/rosidl_typesupport_introspection_c -isystem /opt/ros/rolling/include/rosidl_typesupport_introspection_cpp -isystem /opt/ros/rolling/include/rcl -isystem /opt/ros/rolling/include/rcl_interfaces -isystem /opt/ros/rolling/include/rcl_logging_interface -isystem /opt/ros/rolling/include/rcl_yaml_param_parser -isystem /opt/ros/rolling/include/libyaml_vendor -isystem /opt/ros/rolling/include/tracetools -isystem /opt/ros/rolling/include/rcpputils -isystem /opt/ros/rolling/include/statistics_msgs -isystem /opt/ros/rolling/include/rosgraph_msgs -isystem /opt/ros/rolling/include/rosidl_typesupport_cpp -isystem /opt/ros/rolling/include/rosidl_typesupport_c -isystem /opt/ros/rolling/include/unique_identifier_msgs -isystem /opt/ros/rolling/include/rcl_action -isystem /opt/ros/rolling/include/rcl_lifecycle -isystem /opt/ros/rolling/include/message_filters -isystem /opt/ros/rolling/include/tf2_msgs -isystem /usr/include/eigen3 -O3 -DNDEBUG -fPIC -Wall -Wextra -Wpedantic -Werror -Wdeprecated -fPIC -c -resource-dir=/home/josh/.local/share/nvim/mason/packages/clangd/clangd/lib/clang/15.0.6 -- /home/josh/nav2_ws/src/navigation2/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.971] Loaded compilation database from /home/josh/nav2_ws/build/nav2_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.971] Loaded compilation database from /home/josh/nav2_ws/build/dwb_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.972] Loaded compilation database from /home/josh/nav2_ws/build/nav_2d_msgs/compile_commands.json\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.972] Loaded compilation database from /home/josh/nav2_ws/build/nav2_rviz_plugins/compile_commands.json\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.972] --> window/workDoneProgress/create(0)\n"
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  id = 0,  jsonrpc = "2.0",  method = "window/workDoneProgress/create",  params = {    token = "backgroundIndexProgress"  }}
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:403	"server_request: callback result"	{  result = vim.NIL,  status = true}
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:285	"rpc.send"	{  id = 0,  jsonrpc = "2.0",  result = vim.NIL}
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.972] Enqueueing 228 commands for indexing\n"
[ERROR][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:27.973] <-- reply(0)\nI[14:51:27.973] --> $/progress\nI[14:51:27.973] --> $/progress\n"
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "begin",      percentage = 0,      title = "indexing"    }  }}
[DEBUG][2023-03-17 14:51:27] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "report",      message = "0/1",      percentage = 0    }  }}
[ERROR][2023-03-17 14:51:28] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:28.221] --> textDocument/publishDiagnostics\n"
[DEBUG][2023-03-17 14:51:28] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "textDocument/publishDiagnostics",  params = {    diagnostics = { {        code = "pp_file_not_found",        message = "'nav2_bt_navigator/navigators/navigate_to_pose.hpp' file not found",        range = {          ["end"] = {            character = 60,            line = 18          },          start = {            character = 9,            line = 18          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 24          },          start = {            character = 0,            line = 24          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'rclcpp_lifecycle'",        range = {          ["end"] = {            character = 18,            line = 25          },          start = {            character = 2,            line = 25          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'nav2_util'",        range = {          ["end"] = {            character = 27,            line = 26          },          start = {            character = 18,            line = 26          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 56          },          start = {            character = 0,            line = 56          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'rclcpp_lifecycle'",        range = {          ["end"] = {            character = 18,            line = 57          },          start = {            character = 2,            line = 57          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 77          },          start = {            character = 0,            line = 77          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 85          },          start = {            character = 0,            line = 85          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'ActionT'",        range = {          ["end"] = {            character = 45,            line = 85          },          start = {            character = 38,            line = 85          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 102          },          start = {            character = 0,            line = 102          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'ActionT'",        range = {          ["end"] = {            character = 18,            line = 103          },          start = {            character = 11,            line = 103          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'nav2_behavior_tree'",        range = {          ["end"] = {            character = 26,            line = 104          },          start = {            character = 8,            line = 104          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 109          },          start = {            character = 0,            line = 109          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 178          },          start = {            character = 0,            line = 178          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'ActionT'",        range = {          ["end"] = {            character = 42,            line = 178          },          start = {            character = 35,            line = 178          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 203          },          start = {            character = 0,            line = 203          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'ActionT'",        range = {          ["end"] = {            character = 51,            line = 203          },          start = {            character = 44,            line = 203          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'NavigateToPoseNavigator'",        range = {          ["end"] = {            character = 23,            line = 219          },          start = {            character = 0,            line = 219          }        },        relatedInformation = {},        severity = 1,        source = "clang"      }, {        code = "undeclared_var_use",        message = "Use of undeclared identifier 'geometry_msgs'",        range = {          ["end"] = {            character = 63,            line = 219          },          start = {            character = 50,            line = 219          }        },        relatedInformation = {},        severity = 1,        source = "clang"      } },    uri = "file:///home/josh/nav2_ws/src/navigation2/nav2_bt_navigator/src/navigators/navigate_to_pose.cpp",    version = 0  }}
[ERROR][2023-03-17 14:51:28] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:28.687] --> $/progress\n"
[ERROR][2023-03-17 14:51:28] .../vim/lsp/rpc.lua:733	"rpc"	"clangd"	"stderr"	"I[14:51:28.687] --> $/progress\n"
[DEBUG][2023-03-17 14:51:28] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "report",      message = "0/1",      percentage = 0    }  }}
[DEBUG][2023-03-17 14:51:28] .../vim/lsp/rpc.lua:388	"rpc.receive"	{  jsonrpc = "2.0",  method = "$/progress",  params = {    token = "backgroundIndexProgress",    value = {      kind = "end"    }  }}
